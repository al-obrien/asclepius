% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{init_adj_matrix_cpp}
\alias{init_adj_matrix_cpp}
\title{Create adjacency matrix for contacts}
\usage{
init_adj_matrix_cpp(
  adj_matrix,
  contact_matrix,
  category_id,
  num_contacts,
  sample_order,
  display_progress = TRUE
)
}
\arguments{
\item{adj_matrix}{Adjacency matrix, typically of type SparseMatrix; most likely will be 'blank' to be initialized/filled by this function.}

\item{contact_matrix}{Matrix of probabilities for each type of contact (e.g. probabilities of 3 ages groups and 2 genders interacting, for a total of 36 cross combinations).}

\item{category_id}{Unique numeric value for the type of contact group (e.g. Female of age 20).}

\item{num_contacts}{Integer for number of contacts for particular agent.}

\item{sample_order}{Integer vector to determine order to fill the adjacency matrix (e.g. by default will go in order of agent list, recommended to provide a random order to ensure contacts fill without preference to a categorical sorting).}

\item{display_progress}{Boolean value to determine if a progress bar is displayed (useful for when creating large networks, such as those >10,000 agents).}
}
\description{
Fill sparse adjacency matrix based upon a specific contact probability structure and contact limits.
}
\details{
Used primarily as internal component to generate the population S4 object's contact structure. C++ was used to improve efficiency; works well for
up to 10-100k agents before noticeably slow. Further performance gains could be provided if agents are split into blocks (e.g. 100k rows) and computer in parallel; however,
this will have  a large assumption that each block will not have contacts between each other unless additional operations are done to add contacts after each block completes.
}
